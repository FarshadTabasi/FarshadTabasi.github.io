{
  "hash": "eecd532b01afd53e67b77245806f7392",
  "result": {
    "markdown": "---\ntitle: Downloading Alberta Oilsands Production Data using Python\nauthor: Farshad Tabasinejad\ndate: '2023-02-23'\ndate-modified: '2021-02-23'\ntoc: true\ndraft: false\ncategories:\n  - python\n  - web scraping\nimage: Oilsands_monthly_production_2010.png\nexecute:\n  cache: false\n  output: true\nformat:\n  html:\n    code-fold: false\n    code-tools: true\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: '#31BAE9'\n    code-copy: hover\n    highlight: zenburn\n---\n\n# Disclaimer\n\nThis blog post is for educational purposes only. Any commercial use of the information provided in this blog post is prohibited. For more information about the AER copyright and permission to reproduce, please visit [AER Copyright and Disclaimer](https://www.aer.ca/copyright-disclaimer).\nThe author is not responsible for any damage or loss caused by the use of the information provided in this blog post. \n\n# Introduction\n\nAlberta Energy Regulator (AER) lists the monthly injection and production data for all in-situ oilsands projects in Alberta on its website [Alberta Energy Regulator](https://www.aer.ca/). The data is available in several spreadsheets and can be downloaded from [ST53: Alberta In Situ Oil Sands Production Summary](https://www.aer.ca/providing-information/data-and-reports/statistical-reports/st53). The annual data are reported in separate files in **`.xls`** format. Each file has 6 different sheets with information about bitumen, water, steam, wells, SOR, and WSR.\n\nIn the following, It is shown how to download the data using Python. The entire source code can be downloaded by clicking on **`</>Code`** next to the blog title.\n\n# Downloading the Data\n\n`requests` and `BeautifulSoup` are used to download the xls files. The following code downloads all the xls files from the AER website and saves them in the current directory:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport requests\nfrom bs4 import BeautifulSoup\n# get the html\nurl = 'https://www.aer.ca/providing-information/data-and-reports/statistical-reports/st53'\nr = requests.get(url)\ndata = r.text\n# parse the html\nsoup = BeautifulSoup(data, 'html.parser')\n# find all the hyperlinks\nlinks = soup.findAll('a', href = True) \n# get the list of xls files only\nxls_links = [link for link in links if link.get('href').endswith('xls')]\n# download the xls files and save them in the current directory\nfor link in xls_links:\n    xls_url = link.get('href')\n    xls_name = xls_url.split('/')[-1]\n    xls = requests.get(xls_url)\n    with open(xls_name, 'wb') as f:\n        f.write(xls.content)\n```\n:::\n\n\n## Listing all the saved xls files in the current directory:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport os\n# filter only .xls files\nxls_files = [file for file in os.listdir(os.getcwd()) if file.endswith('.xls')]\nxls_files\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n['ST53_2010-12.xls',\n 'ST53_2011-12.xls',\n 'ST53_2012-12.xls',\n 'ST53_2013-12.xls',\n 'ST53_2014-12.xls',\n 'ST53_2016-12.xls',\n 'ST53_2017-12.xls',\n 'ST53_2018-12.xls',\n 'ST53_2019-12.xls',\n 'ST53_2020-12.xls',\n 'ST53_2021-12.xls',\n 'ST53_Current.xls']\n```\n:::\n:::\n\n\nIn the next post, I will show how to read the data from the `.xls` files and prepare the datasets for further analysis.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}