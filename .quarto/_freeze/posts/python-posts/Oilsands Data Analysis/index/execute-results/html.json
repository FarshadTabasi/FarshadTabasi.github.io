{
  "hash": "13c3127c3e5aa9bd895c71598633d8a9",
  "result": {
    "markdown": "---\ntitle: Alberta Oilsands Production Analysis using Python\nauthor: Farshad Tabasinejad\ndate: '2023-03-01'\ndate-modified: '2021-03-01'\ntoc: true\ndraft: false\ncategories:\n  - python\n  - pandas\n  - data analysis\n  - data visualization\nimage: bubble_point_ai.png\nexecute:\n  cache: false\n  output: true\nformat:\n  html:\n    code-fold: false\n    code-tools: true\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: '#31BAE9'\n    code-copy: hover\n    highlight: zenburn\n---\n\n# Disclaimer\n\nThis blog post is for educational purposes only. Any commercial use of the information provided in this blog post is prohibited. For more information about the AER copyright and permission to reproduce, please visit [AER Copyright and Disclaimer](https://www.aer.ca/copyright-disclaimer).\nThe author is not responsible for any damage or loss caused by the use of the information provided in this blog post. \n\n# Introduction\n\nAlberta Energy Regulator (AER) lists the monthly injection and production data for all in-situ oilsands projects in Alberta on its website [Alberta Energy Regulator](https://www.aer.ca/). The data is available in several spreadsheets and can be downloaded from [ST53: Alberta In Situ Oil Sands Production Summary](https://www.aer.ca/providing-information/data-and-reports/statistical-reports/st53). The annual data are reported in separate files in **XLS** format. Each file has 6 different sheets with information about bitumen, water, steam, wells, SOR, and WSR.\n\nIn the previous post [Downloading Alberta Oilsands Monthly Production Data using Python](), I have shown how to download the data using python. In this post we use the downloaded data for data analysis and visualization. The entire source code can be downloaded by clicking on **`</>Code`** next to the blog title.\n\n## Loading the Data\n\nAll files are stored on a local directory. We use the `glob` module to list all **XLS** files in the directory and then use `pandas` to read the data into a `DataFrame`. The `xlrd` module is used as an engine in pandas to read the **XLS** files. The `matplotlib` module is used to create the plots. The `seaborn` module is used to create the plots. The `numpy` module is used to perform mathematical operations on the data. The `warnings` module is used to suppress the warnings. The `os` module is used to save the plots in the current directory.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport glob\nimport pandas as pd\nimport xlrd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport warnings\nimport os\nwarnings.filterwarnings('ignore')\n```\n:::\n\n\nThe `glob` module is used to list all `XLS` files in the directory. \n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nxls_files = glob.glob('*.xls')\nxls_files\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n['ST53_2010-12.xls',\n 'ST53_2011-12.xls',\n 'ST53_2012-12.xls',\n 'ST53_2013-12.xls',\n 'ST53_2014-12.xls',\n 'ST53_2016-12.xls',\n 'ST53_2017-12.xls',\n 'ST53_2018-12.xls',\n 'ST53_2019-12.xls',\n 'ST53_2020-12.xls',\n 'ST53_2021-12.xls',\n 'ST53_2022-12.xls']\n```\n:::\n:::\n\n\n## Analyzing the Data for the first file [year: 2010]\nIn this section we first create a tidy dataset in several steps for the first file in the list. We then summarize all the steps in a few functions and read all the files and create a single file with all the data. \n\nMost of these steps are already covered in the previous post [Downloading Alberta Oilsands Monthly Production Data using Python](). To keep this post short, I will not go into details about the steps that are already covered in the previous post.\nThe `xlrd` engine is used internally by `pandas` to read the `XLS` files. `None` is assigned to the `sheet_name` argument to read all the sheets in the file. The `skiprows` argument is used to skip the first 3 rows in each sheet. As explained in the previous post, there are several rows at the end of each sheet with additional information that are not needed for our analysis. We use the row index of the cell with the value __Total__ in the __Recovery Method__ column to skip the rows at the end of `BITUMEN`, `WATER`, `STEAM`, and `WELLS` sheets. The `SOR` and `WSR` sheets do not have the __Recovery Method__ column and the row index of the cell with the value __Notes:__ in the __Operator__ column can be used to skip the rows at the end of `SOR` and `WSR` sheets. We calculate `SOR` and `WSR` values directly in this post and do not need the `SOR` and `WSR` sheets. We also skip analyzing the `WELLS` sheet. Please refer to the previous post for more details on all steps.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# read the first file\ndf_2010 = pd.read_excel(xls_files[0], sheet_name = None, skiprows = 3)\ndf_2010.keys()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\ndict_keys(['BITUMEN', 'WATER', 'STEAM', 'WELLS', 'SOR', 'WSR'])\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# read the BITUMEN sheet]\nbitumen_2010 = df_2010['BITUMEN']\n```\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# get the index of the last row using np.where\nlast_row_idx = np.where(bitumen_2010[[\"Recovery Method\"]] == \"Total \")[0][0]\nbitumen_2010 = bitumen_2010.iloc[:last_row_idx, :]\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# create a dictionary to make Operator names consistent\noperators_dict = {'Blackpearl Resources Inc.': 'BlackPearl',\n                  'BlackPearl Resources Inc.': 'BlackPearl',\n                  'Bonavista Petroleum Ltd.': 'Bonavista',\n                  'Bonavista Energy Corporation': 'Bonavista',\n                  'CNOOC Petroleum North America ULC': 'CNOOC',\n                  'Canadian Natural Resources': 'CNRL',\n                  'Canadian Natural Resources Limited': 'CNRL',\n                  'Canadian Natural Upgrading Limited': 'CNRL',\n                  'Cenovus Energy Inc.': 'Cenovus',\n                  'Cenovus FCCL Ltd.': 'Cenovus',\n                  'ConocoPhillips Canada Resources Corp.': 'ConocoPhillips',\n                  'ConocoPhillips Canada Limited': 'ConocoPhillips',\n                  'Devon Canada Corporation': 'Devon',\n                  'Devon NEC Corporation': 'Devon',\n                  'ExxonMobil Canada Ltd.': 'Imperial',\n                  'Greenfire Hangingstone Operating Corporation': 'Greenfire',\n                  'Greenfire Resources Operating Corporation': 'Greenfire',\n                  'Husky Oil Operations Limited' : 'Husky',\n                  'Husky Oil Operations Ltd.' : 'Husky',\n                  'Imperial Oil Resources': 'Imperial',\n                  'Imperial Oil Resources Limited': 'Imperial',\n                  'Koch Exploration Canada G/P Ltd.': 'Koch',\n                  'Koch Oil Sands Operating ULC': 'Koch',\n                  'MEG Energy Corp.': 'MEG',\n                  'Meg Energy Corp.': 'MEG',\n                  'Murphy Oil Canada': 'Murphy',\n                  'Murphy Oil Company Ltd.': 'Murphy',\n                  'Nexen Energy ULC': 'Nexen',\n                  'Nexen Inc.': 'Nexen',\n                  'OSUM Oil Sands Corp.': 'OSUM',\n                  'Osum Production Corp.': 'OSUM',\n                  'Pengrowth Corporation': 'Pengrowth',\n                  'Pengrowth Energy Corporation': 'Pengrowth',\n                  'Penn West Energy Trust': 'Penn West',\n                  'Penn West Petroleum Ltd.': 'Penn West',\n                  'Perpetual Energy Inc.': 'Perpetual',\n                  'Perpetual Energy Operating Corp.': 'Perpetual',\n                  'Perpetual Operating Corp.': 'Perpetual',\n                  'PetroChina Canada Ltd.': 'PetroChina',\n                  'Petrochina Canada Ltd.': 'PetroChina',\n                  'Shell Canada Energy': 'Shell',\n                  'Shell Canada Limited': 'Shell',\n                  'Spur Petroleum Ltd.': 'Spur',\n                  'Spur Resources Ltd.': 'Spur',\n                  'Woodcote Oil & Gas Inc.': 'Woodcote',\n                  'Woodcote Oil Corp.': 'Woodcote'\n                  }\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# create a tidy dataset for bitumen production by removing additional information in parenthesis from the Operator column, making operator names consistent, and grouping by operator\nbitumen_2010 = (bitumen_2010\n            .dropna(subset = ['Operator'])\n            .assign(Operator = lambda x: x.Operator.str.split('(').str[0].str.strip())\n            .assign(Operator = lambda x: x.Operator.str.replace('  ', ' '))\n            .replace({'Operator': operators_dict})\n            .groupby(['Operator']).sum().reset_index()\n            .assign(Year = xls_files[0].split('_')[-1].split('-')[0])\n)\nbitumen_2010\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Operator</th>\n      <th>Jan</th>\n      <th>Feb</th>\n      <th>Mar</th>\n      <th>Apr</th>\n      <th>May</th>\n      <th>Jun</th>\n      <th>Jul</th>\n      <th>Aug</th>\n      <th>Sep</th>\n      <th>Oct</th>\n      <th>Nov</th>\n      <th>Dec</th>\n      <th>Monthly Average</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Action Energy Inc.</td>\n      <td>2.75</td>\n      <td>3.13</td>\n      <td>3.10</td>\n      <td>2.40</td>\n      <td>2.57</td>\n      <td>2.12</td>\n      <td>2.91</td>\n      <td>2.61</td>\n      <td>1.94</td>\n      <td>2.24</td>\n      <td>1.83</td>\n      <td>0.73</td>\n      <td>2.36</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Baytex Energy Ltd.</td>\n      <td>1329.74</td>\n      <td>1328.52</td>\n      <td>1521.26</td>\n      <td>1265.24</td>\n      <td>1521.75</td>\n      <td>1839.30</td>\n      <td>1789.96</td>\n      <td>1804.53</td>\n      <td>1839.56</td>\n      <td>1701.64</td>\n      <td>1809.96</td>\n      <td>1777.24</td>\n      <td>1632.68</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bellatrix Exploration Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>15.81</td>\n      <td>15.81</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>BlackPearl</td>\n      <td>1.34</td>\n      <td>3.32</td>\n      <td>1.43</td>\n      <td>0.69</td>\n      <td>1.86</td>\n      <td>2.07</td>\n      <td>1.44</td>\n      <td>1.94</td>\n      <td>3.37</td>\n      <td>1.47</td>\n      <td>1.12</td>\n      <td>1.84</td>\n      <td>1.82</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bonavista</td>\n      <td>318.60</td>\n      <td>296.70</td>\n      <td>287.84</td>\n      <td>268.92</td>\n      <td>268.04</td>\n      <td>239.30</td>\n      <td>228.08</td>\n      <td>225.62</td>\n      <td>225.54</td>\n      <td>230.28</td>\n      <td>290.99</td>\n      <td>234.76</td>\n      <td>259.57</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Bronco Energy Ltd.</td>\n      <td>28.65</td>\n      <td>28.58</td>\n      <td>27.94</td>\n      <td>22.84</td>\n      <td>91.39</td>\n      <td>80.23</td>\n      <td>77.59</td>\n      <td>83.21</td>\n      <td>64.28</td>\n      <td>74.45</td>\n      <td>69.66</td>\n      <td>63.98</td>\n      <td>59.40</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Buffalo Resources Corp.</td>\n      <td>15.11</td>\n      <td>12.01</td>\n      <td>16.74</td>\n      <td>16.53</td>\n      <td>19.37</td>\n      <td>18.51</td>\n      <td>14.97</td>\n      <td>12.08</td>\n      <td>16.79</td>\n      <td>19.92</td>\n      <td>14.30</td>\n      <td>17.13</td>\n      <td>16.12</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>CNRL</td>\n      <td>22431.43</td>\n      <td>25310.41</td>\n      <td>28066.11</td>\n      <td>25308.06</td>\n      <td>30052.06</td>\n      <td>29492.93</td>\n      <td>28992.88</td>\n      <td>28616.60</td>\n      <td>26751.61</td>\n      <td>28027.22</td>\n      <td>32006.40</td>\n      <td>33009.93</td>\n      <td>28316.22</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Cenovus</td>\n      <td>21595.79</td>\n      <td>22839.19</td>\n      <td>22407.49</td>\n      <td>22435.89</td>\n      <td>22247.41</td>\n      <td>21986.20</td>\n      <td>22176.78</td>\n      <td>21117.60</td>\n      <td>22960.34</td>\n      <td>21720.81</td>\n      <td>22587.47</td>\n      <td>22853.46</td>\n      <td>22244.04</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Connacher Oil And Gas Limited</td>\n      <td>1050.30</td>\n      <td>1134.17</td>\n      <td>1156.09</td>\n      <td>1079.40</td>\n      <td>822.28</td>\n      <td>1065.51</td>\n      <td>1161.84</td>\n      <td>1457.94</td>\n      <td>1725.33</td>\n      <td>1977.97</td>\n      <td>2115.62</td>\n      <td>2225.37</td>\n      <td>1651.25</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>ConocoPhillips</td>\n      <td>2664.15</td>\n      <td>2800.02</td>\n      <td>3156.73</td>\n      <td>3244.68</td>\n      <td>3329.58</td>\n      <td>3207.50</td>\n      <td>3529.19</td>\n      <td>3570.22</td>\n      <td>3378.29</td>\n      <td>3755.21</td>\n      <td>3689.54</td>\n      <td>3721.19</td>\n      <td>3337.19</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Crispin Energy Inc.</td>\n      <td>11.32</td>\n      <td>9.06</td>\n      <td>9.59</td>\n      <td>5.26</td>\n      <td>8.71</td>\n      <td>8.02</td>\n      <td>5.95</td>\n      <td>8.71</td>\n      <td>7.85</td>\n      <td>8.25</td>\n      <td>8.11</td>\n      <td>11.88</td>\n      <td>9.09</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Devon</td>\n      <td>9982.83</td>\n      <td>9739.64</td>\n      <td>10056.54</td>\n      <td>9728.74</td>\n      <td>10701.02</td>\n      <td>10697.26</td>\n      <td>10221.05</td>\n      <td>10042.92</td>\n      <td>6980.52</td>\n      <td>7915.55</td>\n      <td>9785.62</td>\n      <td>9882.21</td>\n      <td>9644.97</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Frog Lake Energy Resources Corp.</td>\n      <td>11.42</td>\n      <td>5.22</td>\n      <td>5.11</td>\n      <td>8.76</td>\n      <td>12.08</td>\n      <td>16.21</td>\n      <td>13.78</td>\n      <td>11.12</td>\n      <td>17.36</td>\n      <td>18.75</td>\n      <td>19.41</td>\n      <td>22.18</td>\n      <td>13.45</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Harvest Operations Corp.</td>\n      <td>51.27</td>\n      <td>55.08</td>\n      <td>54.10</td>\n      <td>52.22</td>\n      <td>55.95</td>\n      <td>51.18</td>\n      <td>50.49</td>\n      <td>48.75</td>\n      <td>48.06</td>\n      <td>53.05</td>\n      <td>53.98</td>\n      <td>49.14</td>\n      <td>51.94</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Husky</td>\n      <td>2203.19</td>\n      <td>2151.47</td>\n      <td>1865.46</td>\n      <td>2092.67</td>\n      <td>1894.59</td>\n      <td>2167.51</td>\n      <td>2178.13</td>\n      <td>2250.67</td>\n      <td>2111.99</td>\n      <td>2251.10</td>\n      <td>2542.06</td>\n      <td>2660.95</td>\n      <td>2217.66</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Imperial</td>\n      <td>23710.09</td>\n      <td>24543.85</td>\n      <td>23962.57</td>\n      <td>23155.58</td>\n      <td>22206.07</td>\n      <td>22263.13</td>\n      <td>22296.39</td>\n      <td>22960.70</td>\n      <td>21996.35</td>\n      <td>23156.01</td>\n      <td>23701.99</td>\n      <td>23956.75</td>\n      <td>23159.13</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Japan Canada Oil Sands Limited</td>\n      <td>1186.33</td>\n      <td>1155.23</td>\n      <td>1062.03</td>\n      <td>783.28</td>\n      <td>1218.67</td>\n      <td>1166.01</td>\n      <td>1132.23</td>\n      <td>1080.17</td>\n      <td>1188.32</td>\n      <td>1133.37</td>\n      <td>1214.59</td>\n      <td>1129.26</td>\n      <td>1120.79</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Koch</td>\n      <td>3.47</td>\n      <td>5.60</td>\n      <td>11.13</td>\n      <td>2.39</td>\n      <td>6.26</td>\n      <td>3.96</td>\n      <td>5.47</td>\n      <td>19.32</td>\n      <td>29.53</td>\n      <td>28.18</td>\n      <td>20.82</td>\n      <td>24.20</td>\n      <td>13.36</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>MEG</td>\n      <td>1222.04</td>\n      <td>2012.71</td>\n      <td>2666.20</td>\n      <td>3596.39</td>\n      <td>3883.73</td>\n      <td>4189.44</td>\n      <td>4016.79</td>\n      <td>4290.65</td>\n      <td>843.95</td>\n      <td>4507.48</td>\n      <td>4475.88</td>\n      <td>4251.55</td>\n      <td>3329.73</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Manitok Exploration Inc.</td>\n      <td>9.01</td>\n      <td>13.28</td>\n      <td>12.99</td>\n      <td>10.77</td>\n      <td>12.44</td>\n      <td>10.92</td>\n      <td>11.79</td>\n      <td>10.71</td>\n      <td>9.70</td>\n      <td>5.97</td>\n      <td>11.71</td>\n      <td>11.92</td>\n      <td>10.93</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Murphy</td>\n      <td>875.34</td>\n      <td>872.36</td>\n      <td>856.28</td>\n      <td>852.99</td>\n      <td>791.06</td>\n      <td>771.88</td>\n      <td>770.08</td>\n      <td>769.41</td>\n      <td>797.46</td>\n      <td>815.91</td>\n      <td>857.67</td>\n      <td>892.91</td>\n      <td>830.25</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Nexen</td>\n      <td>2576.60</td>\n      <td>2803.16</td>\n      <td>3490.64</td>\n      <td>3906.26</td>\n      <td>3737.76</td>\n      <td>4240.79</td>\n      <td>4459.99</td>\n      <td>3984.57</td>\n      <td>3819.51</td>\n      <td>4604.76</td>\n      <td>4176.14</td>\n      <td>4628.39</td>\n      <td>3869.05</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>North Peace Energy Corp.</td>\n      <td>10.30</td>\n      <td>4.70</td>\n      <td>3.11</td>\n      <td>2.21</td>\n      <td>1.63</td>\n      <td>0.51</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.40</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>3.27</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Penn West</td>\n      <td>279.01</td>\n      <td>281.36</td>\n      <td>272.08</td>\n      <td>274.62</td>\n      <td>278.90</td>\n      <td>262.98</td>\n      <td>235.53</td>\n      <td>276.71</td>\n      <td>283.20</td>\n      <td>275.46</td>\n      <td>314.75</td>\n      <td>378.70</td>\n      <td>289.93</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Prosper Petroleum Ltd.</td>\n      <td>314.33</td>\n      <td>320.06</td>\n      <td>290.21</td>\n      <td>259.07</td>\n      <td>290.71</td>\n      <td>274.26</td>\n      <td>270.47</td>\n      <td>251.36</td>\n      <td>234.31</td>\n      <td>211.85</td>\n      <td>166.20</td>\n      <td>257.03</td>\n      <td>261.66</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Shell</td>\n      <td>4139.89</td>\n      <td>3978.75</td>\n      <td>4047.93</td>\n      <td>3849.33</td>\n      <td>3860.94</td>\n      <td>3670.44</td>\n      <td>3690.54</td>\n      <td>3605.76</td>\n      <td>3368.87</td>\n      <td>2938.82</td>\n      <td>3201.53</td>\n      <td>2933.30</td>\n      <td>3607.18</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Solara Exploration Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>10.84</td>\n      <td>9.80</td>\n      <td>11.26</td>\n      <td>11.52</td>\n      <td>11.45</td>\n      <td>8.62</td>\n      <td>5.93</td>\n      <td>8.85</td>\n      <td>9.78</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Statoil Canada Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>5.51</td>\n      <td>81.05</td>\n      <td>138.44</td>\n      <td>180.31</td>\n      <td>101.33</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Suncor Energy Inc.</td>\n      <td>13049.45</td>\n      <td>14253.79</td>\n      <td>14378.61</td>\n      <td>13960.11</td>\n      <td>13876.08</td>\n      <td>14206.33</td>\n      <td>14412.89</td>\n      <td>14227.60</td>\n      <td>9025.13</td>\n      <td>12732.81</td>\n      <td>14212.22</td>\n      <td>13935.72</td>\n      <td>13522.57</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Sunshine Oilsands Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.52</td>\n      <td>1.98</td>\n      <td>2.10</td>\n      <td>4.15</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.39</td>\n      <td>5.54</td>\n      <td>17.06</td>\n      <td>4.82</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Total E&amp;P Joslyn Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Twin Butte Energy Ltd.</td>\n      <td>350.08</td>\n      <td>350.31</td>\n      <td>364.78</td>\n      <td>414.61</td>\n      <td>463.89</td>\n      <td>493.21</td>\n      <td>472.13</td>\n      <td>472.19</td>\n      <td>514.21</td>\n      <td>545.26</td>\n      <td>692.22</td>\n      <td>756.90</td>\n      <td>490.82</td>\n      <td>2010</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Watch Resources Ltd.</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.68</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>3.38</td>\n      <td>5.26</td>\n      <td>2.92</td>\n      <td>3.31</td>\n      <td>2010</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# define a function to create a tidy dataset for bitumen production\ndef create_tidy_bitumen(df, operators_dict, xls_file):\n    last_row_idx = np.where(df[[\"Recovery Method\"]] == \"Total \")[0][0]\n    df = df.iloc[:last_row_idx, :]\n    df = (df\n            .dropna(subset = ['Operator'])\n            .assign(Operator = lambda x: x.Operator.str.split('(').str[0].str.strip())\n            .assign(Operator = lambda x: x.Operator.str.replace('  ', ' '))\n            .replace({'Operator': operators_dict})\n            .assign(Year = xls_file.split('_')[-1].split('-')[0])\n    )\n    return df\n```\n:::\n\n\n## Reading all the files and creating a single file with all the data for bitumen production\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# read all the files and create a single file with all the data for bitumen production\nbitumen = pd.DataFrame()\nfor xls_file in xls_files:\n    df = pd.read_excel(xls_file, sheet_name = None, skiprows = 3)\n    bitumen = bitumen.append(create_tidy_bitumen(df['BITUMEN'], operators_dict, xls_file))\n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nbitumen.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Operator</th>\n      <th>Scheme Name</th>\n      <th>Area</th>\n      <th>Approval Number</th>\n      <th>Recovery Method</th>\n      <th>Jan</th>\n      <th>Feb</th>\n      <th>Mar</th>\n      <th>Apr</th>\n      <th>May</th>\n      <th>Jun</th>\n      <th>Jul</th>\n      <th>Aug</th>\n      <th>Sep</th>\n      <th>Oct</th>\n      <th>Nov</th>\n      <th>Dec</th>\n      <th>Monthly Average</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>177</th>\n      <td>CNRL</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9821E</td>\n      <td>Primary</td>\n      <td>2.14</td>\n      <td>2.49</td>\n      <td>1.97</td>\n      <td>2.23</td>\n      <td>2.39</td>\n      <td>2.26</td>\n      <td>2.52</td>\n      <td>1.77</td>\n      <td>2.38</td>\n      <td>2.19</td>\n      <td>2.30</td>\n      <td>1.55</td>\n      <td>2.18</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>178</th>\n      <td>Frog Lake Energy Resources Corp.</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9827P</td>\n      <td>Primary</td>\n      <td>41.22</td>\n      <td>54.36</td>\n      <td>49.92</td>\n      <td>44.98</td>\n      <td>49.07</td>\n      <td>58.38</td>\n      <td>59.56</td>\n      <td>61.54</td>\n      <td>72.03</td>\n      <td>69.83</td>\n      <td>67.91</td>\n      <td>62.90</td>\n      <td>57.64</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>179</th>\n      <td>Cenovus</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9873F</td>\n      <td>Primary</td>\n      <td>31.12</td>\n      <td>25.87</td>\n      <td>26.76</td>\n      <td>22.68</td>\n      <td>19.93</td>\n      <td>17.73</td>\n      <td>26.04</td>\n      <td>24.67</td>\n      <td>37.05</td>\n      <td>13.47</td>\n      <td>18.81</td>\n      <td>16.17</td>\n      <td>23.36</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>CNRL</td>\n      <td>Brintnell</td>\n      <td>Athabasca</td>\n      <td>9884F</td>\n      <td>Primary</td>\n      <td>11.81</td>\n      <td>12.13</td>\n      <td>14.09</td>\n      <td>23.50</td>\n      <td>18.24</td>\n      <td>21.50</td>\n      <td>22.99</td>\n      <td>21.93</td>\n      <td>18.31</td>\n      <td>12.54</td>\n      <td>10.67</td>\n      <td>9.79</td>\n      <td>16.46</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>181</th>\n      <td>Baytex Energy Ltd.</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9908J</td>\n      <td>Primary</td>\n      <td>50.70</td>\n      <td>55.11</td>\n      <td>62.10</td>\n      <td>59.68</td>\n      <td>58.63</td>\n      <td>58.42</td>\n      <td>46.10</td>\n      <td>56.89</td>\n      <td>46.54</td>\n      <td>43.03</td>\n      <td>36.08</td>\n      <td>32.56</td>\n      <td>50.49</td>\n      <td>2022</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Reading all the files and creating a single file with all the data for water production\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# read all the files and create a single file with all the data for water production\nwater = pd.DataFrame()\nfor xls_file in xls_files:\n    df = pd.read_excel(xls_file, sheet_name = None, skiprows = 3)\n    water = water.append(create_tidy_bitumen(df['WATER'], operators_dict, xls_file))\n```\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nwater.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Operator</th>\n      <th>Scheme Name</th>\n      <th>Area</th>\n      <th>Approval Number</th>\n      <th>Recovery Method</th>\n      <th>Jan</th>\n      <th>Feb</th>\n      <th>Mar</th>\n      <th>Apr</th>\n      <th>May</th>\n      <th>Jun</th>\n      <th>Jul</th>\n      <th>Aug</th>\n      <th>Sep</th>\n      <th>Oct</th>\n      <th>Nov</th>\n      <th>Dec</th>\n      <th>Monthly Average</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>177</th>\n      <td>CNRL</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9821E</td>\n      <td>Primary</td>\n      <td>9.50</td>\n      <td>9.81</td>\n      <td>11.04</td>\n      <td>10.97</td>\n      <td>10.26</td>\n      <td>10.46</td>\n      <td>9.27</td>\n      <td>7.21</td>\n      <td>9.39</td>\n      <td>9.38</td>\n      <td>10.16</td>\n      <td>10.36</td>\n      <td>9.82</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>178</th>\n      <td>Frog Lake Energy Resources Corp.</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9827P</td>\n      <td>Primary</td>\n      <td>89.34</td>\n      <td>114.82</td>\n      <td>133.46</td>\n      <td>122.11</td>\n      <td>136.43</td>\n      <td>138.78</td>\n      <td>167.84</td>\n      <td>145.04</td>\n      <td>159.22</td>\n      <td>155.63</td>\n      <td>154.77</td>\n      <td>154.88</td>\n      <td>139.36</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>179</th>\n      <td>Cenovus</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9873F</td>\n      <td>Primary</td>\n      <td>240.01</td>\n      <td>255.74</td>\n      <td>339.92</td>\n      <td>319.36</td>\n      <td>279.01</td>\n      <td>313.08</td>\n      <td>425.48</td>\n      <td>486.07</td>\n      <td>509.81</td>\n      <td>455.23</td>\n      <td>407.04</td>\n      <td>421.18</td>\n      <td>370.99</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>CNRL</td>\n      <td>Brintnell</td>\n      <td>Athabasca</td>\n      <td>9884F</td>\n      <td>Primary</td>\n      <td>2.98</td>\n      <td>3.12</td>\n      <td>2.97</td>\n      <td>4.24</td>\n      <td>4.07</td>\n      <td>5.50</td>\n      <td>6.70</td>\n      <td>6.62</td>\n      <td>6.04</td>\n      <td>4.92</td>\n      <td>4.74</td>\n      <td>4.46</td>\n      <td>4.70</td>\n      <td>2022</td>\n    </tr>\n    <tr>\n      <th>181</th>\n      <td>Baytex Energy Ltd.</td>\n      <td>NaN</td>\n      <td>Cold Lake</td>\n      <td>9908J</td>\n      <td>Primary</td>\n      <td>6.22</td>\n      <td>0.01</td>\n      <td>3.55</td>\n      <td>1.96</td>\n      <td>1.92</td>\n      <td>4.33</td>\n      <td>3.91</td>\n      <td>2.37</td>\n      <td>1.67</td>\n      <td>2.49</td>\n      <td>2.64</td>\n      <td>4.58</td>\n      <td>2.97</td>\n      <td>2022</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Reading all the files and creating a single file with all the data for steam injection\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# read all the files and create a single file with all the data for steam injestion\nsteam = pd.DataFrame()\nfor xls_file in xls_files:\n    df = pd.read_excel(xls_file, sheet_name = None, skiprows = 3)\n    steam = steam.append(create_tidy_bitumen(df['STEAM'], operators_dict, xls_file))\n```\n:::\n\n\n## Aggregation and visualization of bitumen production data\n\n#### Average bitumen production rate by year\n\nThe daily bitumen production rate is reported as a monthly average in m3/day. An approximate for the yearly average production rate in m3/day is calculated by taking the average of the monthly average production rates. The yearly average production rate is then converted to Mm3/day by dividing by 1,000.\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# aggregate daily bitumen production by year in Mm3/day\nbitumen_agg = (bitumen\n              .assign(Daily_Production_Rate = lambda x: x.loc[:,\"Jan\":\"Dec\"].mean(axis = 1))\n              .drop(columns = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n              .groupby(['Year'])\n              .sum()\n              .div(1000)\n              .reset_index()\n              )\nbitumen_agg\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Monthly Average</th>\n      <th>Daily_Production_Rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2010</td>\n      <td>120.10148</td>\n      <td>119.596470</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011</td>\n      <td>135.09934</td>\n      <td>134.691030</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2012</td>\n      <td>157.18967</td>\n      <td>157.040421</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2013</td>\n      <td>176.16530</td>\n      <td>175.839908</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2014</td>\n      <td>201.17803</td>\n      <td>200.679804</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2016</td>\n      <td>221.22142</td>\n      <td>220.765067</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2017</td>\n      <td>246.25331</td>\n      <td>245.572865</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2018</td>\n      <td>250.13776</td>\n      <td>249.694999</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2019</td>\n      <td>245.79257</td>\n      <td>245.745934</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2020</td>\n      <td>240.04503</td>\n      <td>237.340961</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2021</td>\n      <td>264.73631</td>\n      <td>264.391272</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2022</td>\n      <td>270.09224</td>\n      <td>269.899715</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# plot bitumen production by year\nfig, ax = plt.subplots(figsize = (9, 6))\nsns.barplot(x = 'Year', y = 'Daily_Production_Rate', data = bitumen_agg, ax = ax)\nax.set_title('Average Bitumen Production Rate per Year')\nax.set_xlabel('Year')\nax.set_ylabel('Bitumen Production Rate (Mm3/day)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-16-output-1.png){}\n:::\n:::\n\n\n#### The 5 largest producers in 2022\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# aggregate daily bitumen production by operator in Mm3/day\nbitumen_agg = (bitumen\n              .query(\"Year == '2022'\")\n              .assign(Daily_Production_Rate = lambda x: x.loc[:,\"Jan\":\"Dec\"].mean(axis = 1))\n              .drop(columns = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n              .groupby(['Operator'])\n              .sum()\n              .div(1000)\n              .sort_values(by = 'Daily_Production_Rate', ascending = False)\n              .reset_index()\n              .head(5)\n              )\nbitumen_agg\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Operator</th>\n      <th>Monthly Average</th>\n      <th>Daily_Production_Rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Cenovus</td>\n      <td>76.72720</td>\n      <td>76.725747</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CNRL</td>\n      <td>55.97693</td>\n      <td>55.968093</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Suncor Energy Inc.</td>\n      <td>36.72175</td>\n      <td>36.721742</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Imperial</td>\n      <td>23.12158</td>\n      <td>23.121582</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ConocoPhillips</td>\n      <td>22.14255</td>\n      <td>22.142553</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\n# plot bitumen production by operator\nfig, ax = plt.subplots(figsize = (9, 6))\nsns.barplot(x = 'Daily_Production_Rate', y = 'Operator', data = bitumen_agg.sort_values(by = 'Daily_Production_Rate', ascending = False).head(5), ax = ax)\nax.set_title('Average Bitumen Production Rate per Operator')\nax.set_xlabel('Bitumen Production Rate (Mm3/day)')\nax.set_ylabel('Operator')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-18-output-1.png){}\n:::\n:::\n\n\n#### The 5 largest producers in each area in 2022\n\nPeace River has two areas 1 and 2. These two are combined into one area. \n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# create a dictionary to combine Peace River area 1 and 2 into one area\narea_dict = {'Peace River Area 1': 'Peace River',\n             'Peace River Area 2': 'Peace River',\n             'Cold Lake': 'Cold Lake',\n             'Athabasca': 'Athabasca',\n            }\n```\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\n# aggregate daily bitumen production by operator and area in Mm3/day and selecting the 5 largest producers in each area\nbitumen_agg = (bitumen\n              .query(\"Year == '2022'\")\n              .assign(Area = lambda x: x['Area'].map(area_dict))\n              .assign(Daily_Production_Rate = lambda x: x.loc[:,\"Jan\":\"Dec\"].mean(axis = 1))\n              .drop(columns = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n              .groupby(['Area', 'Operator'])\n              .sum()\n              .div(1000)\n              .sort_values(by = 'Daily_Production_Rate', ascending = False)\n              .groupby('Area')\n              .head(5)\n              .reset_index()\n              )\nbitumen_agg\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Area</th>\n      <th>Operator</th>\n      <th>Monthly Average</th>\n      <th>Daily_Production_Rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Athabasca</td>\n      <td>Cenovus</td>\n      <td>76.56559</td>\n      <td>76.565583</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Athabasca</td>\n      <td>CNRL</td>\n      <td>36.76489</td>\n      <td>36.756985</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Athabasca</td>\n      <td>Suncor Energy Inc.</td>\n      <td>36.72175</td>\n      <td>36.721742</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Cold Lake</td>\n      <td>Imperial</td>\n      <td>23.12158</td>\n      <td>23.121582</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Athabasca</td>\n      <td>ConocoPhillips</td>\n      <td>22.14255</td>\n      <td>22.142553</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Cold Lake</td>\n      <td>CNRL</td>\n      <td>17.71359</td>\n      <td>17.712652</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Athabasca</td>\n      <td>MEG</td>\n      <td>14.75854</td>\n      <td>14.758539</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Cold Lake</td>\n      <td>Strathcona Resources Ltd.</td>\n      <td>7.99515</td>\n      <td>7.995144</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Peace River</td>\n      <td>Baytex Energy Ltd.</td>\n      <td>2.89482</td>\n      <td>2.889908</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Peace River</td>\n      <td>CNRL</td>\n      <td>1.49845</td>\n      <td>1.498456</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Peace River</td>\n      <td>Obsidian Energy Ltd.</td>\n      <td>0.89549</td>\n      <td>0.889067</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Cold Lake</td>\n      <td>Baytex Energy Ltd.</td>\n      <td>0.31789</td>\n      <td>0.308280</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Peace River</td>\n      <td>Islander Oil &amp; Gas Inc.</td>\n      <td>0.27302</td>\n      <td>0.273017</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Cold Lake</td>\n      <td>Cenovus</td>\n      <td>0.16161</td>\n      <td>0.160163</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Peace River</td>\n      <td>Woodcote</td>\n      <td>0.03244</td>\n      <td>0.031730</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\n# bitumen production by operator and area\nfig, ax = plt.subplots(3, 1, figsize = (7, 18))\nsns.barplot(x = 'Daily_Production_Rate', y = 'Operator', data = bitumen_agg.query(\"Area == 'Athabasca'\"), ax = ax[0])\nax[0].set_title('Athabasca')\nax[0].set_xlabel('Bitumen Production Rate (Mm3/day)')\nax[0].set_ylabel('Operator')\nsns.barplot(x = 'Daily_Production_Rate', y = 'Operator', data = bitumen_agg.query(\"Area == 'Cold Lake'\"), ax = ax[1])\nax[1].set_title('Cold Lake')\nax[1].set_xlabel('Bitumen Production Rate (Mm3/day)')\nax[1].set_ylabel('Operator')\nsns.barplot(x = 'Daily_Production_Rate', y = 'Operator', data = bitumen_agg.query(\"Area == 'Peace River'\"), ax = ax[2])\nax[2].set_title('Peace River')\nax[2].set_xlabel('Bitumen Production Rate (Mm3/day)')\nax[2].set_ylabel('Operator')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}